
guitest = [newgui guitest [
    guistayopen [@@arg1]
    guistatus $guirolloveraction
]; showgui guitest]

guitip = [ guistatus (format "TIP: ^fa%1" (? (> $numargs 0) [@arg1] (showtip))) ]

guispacing = [
    guistrut (divf $arg1 $fontwidth) 1
    guistrut (divf $arg2 $fontheight)
]
guispacing2 = [
    guistrut (divf $arg1 $fontwidth) 
    guistrut (divf $arg2 $fontheight) 1
]

guilist2 = [ guilist [ guilist [ arg1 ] ] ]
guiright = [ guilist [ guispring 1; arg1 ] ]
guicenter = [ guilist [ guispring 1; arg1; guispring 1 ] ]
guicenterz = [ guilist [ guispring 1; guilist [ arg1 ]; guispring 1 ] ]

guibox = [ 
    guilist [
        guibackground $arg1 $guibgblend $arg2 1 1
        guistrut 0.8
        guilist [
            guistrut 0.2
            arg3
            guistrut 0.2
        ]
        guistrut 0.8
    ]
]
guibox2 = [guilist [guibox $arg1 $arg2 $arg3]]

guimerge = [ guinoskinfx [guibody [guilist [guilist [guistrut $arg1]; guilist [arg2]]] $arg3 $arg4 $arg5] ]

guilooplistsplit = [
    guilist [
        gli = 0
        gll = (listlen $arg3)
        glz = (div (+ $gll (- $arg2 1)) $arg2)
        loop gla $arg2 [
            guilist [
                glt = (min (+ $gli $glz) $gll)
                while [< $gli $glt] [
                    $arg1 = (at $arg3 $gli)
                    arg4
                    gli = (+ $gli 1)
                ]
            ]
            if (< (+ $gla 1) $arg2) [arg5]
        ]
    ]
]

guiloopsplit = [
    guilist [
        gli = 0
        glz = (div (+ $arg3 (- $arg2 1)) $arg2)
        loop gla $arg2 [
            guilist [
                glt = (min (+ $gli $glz) $arg3)
                while [< $gli $glt] [
                    $arg1 = $gli
                    arg4
                    gli = (+ $gli 1)
                ]
            ]
            if (< (+ $gla 1) $arg2) [arg5]
        ]
    ]
]

guiloopscrollbar = [
    if (= 0 $guipasses) [slider = 0]
    slidermax = (max (- $arg2 $arg3) 0)
    guilist [
        guilist [
            guistrut $arg4 1
            loop line (min $arg3 $arg2) [
                $arg1 = (+ $line $slider)
                arg5
            ]
        ]
        if $slidermax [guislider slider 0 $slidermax [] 1 1]
    ]
]

guicheckbox2 = [
    guistayopen [ guibutton $arg1 [case $@arg2 0 [@@arg2 1] 1 (? @arg3 [@@arg2 2] [@@arg2 0]) 2 [@@arg2 0]] [] "checkbox" 0xFFFFFF 0xFFFFFF -1 1 (? $$arg2 "checkboxon" "") (? (= $$arg2 2) $guicheckboxtwocolour $guicheckboxcolour) ]
]

guiradio2 = [
    guistayopen [ guibutton $arg1 [@arg2 @arg3] [] "radiobox" 0xFFFFFF 0xFFFFFF -1 1 (? (= $$arg2 $arg3) "radioboxon" "") $guiradioboxcolour ]
]

// button for editing commands with built-in key display, tooltip and r-click for console
guieditbutton = [ 
    local cmd // in case there is a semicolon to escape
    cmd = (stringreplace $arg2 ";" "^";^"")
    guibody [     
        guibutton $arg1
        guistrut 0.5
        guispring 1
        guibutton (dobindsearch [@arg2] edit) 
    ] [@arg2] [saycommand /@cmd] [guitooltip [/@@arg2]]
]
guieditbutton2 = [guilist [guieditbutton [@@arg1] [@@arg2]]]

// same for looking up an editvarbind on a checkbox
guieditcheckbox = [
    guibody [     
        guicheckbox $arg1 $arg2
        guistrut 0.5
        guispring 1
        guibutton (dobindsearch [@arg2 (= $@arg2 0); if (= $@arg2 0) [echo @@arg2 OFF] [ echo @@arg2 ON]] edit) 
    ] [if (= $@arg2 0) [echo @@arg2 OFF] [ echo @@arg2 ON]] [saycommand /@arg2] [guitooltip [/@@arg2]]
]
guieditcheckbox2 = [guilist [guieditcheckbox [@@arg1] [@@arg2]]]

guiswitch = [ guilist [ guilist [ if (arg1) [arg2] [arg3] ] ] ]

guione = [
    guispring 1
    guilist [
        guispring 1
        guilist [
            //guistrut 80 1
            arg1
        ]
        guispring 1
    ]
    guispring 1
]

guitwo = [
    guispring 1
    guilist [
        guilist [
            guispring 1
            guilist [
                guispring 1
                arg1
                guispring 1
            ]
            guispring 1
        ]
        guistrut 2
        guilist [
            //guistrut 50 1
            guispring 1
            arg2
            guispring 1
            arg3
        ]
    ]
    guispring 1
]

guibigmacro = [ guistayopen [
    guilist [
        if (> $numargs 9) arg10
        guilist [
            [@[arg1]count] = $arg2
            [@[arg1]disp] = 0
            [@[arg1]list] = 0
            guilist [
                guistrut (+ $arg3 2) 1
                guibackground $guifieldbgcolour $guifieldbgblend $guifieldbordercolour $guifieldborderblend
                guistrut 0.25
                if (arg5) [
                    [@[arg1]num] = $arg6
                    if (> $[@[arg1]num] 0) [
                        [@[arg1]index] = (min (max 0 (- $[@[arg1]num] $[@[arg1]count])) $[@[arg1]index]) //safeguard
                        loop i $[@[arg1]num] [
                            arg7
                            if (arg8) [
                                if (&& (>= $i $[@[arg1]index]) (< $[@[arg1]list] $[@[arg1]count])) [
                                    if (> $numargs 10) arg11
                                    [@[arg1]list] = (+ $[@[arg1]list] 1)
                                ]
                                [@[arg1]disp] = (+ $[@[arg1]disp] 1)
                            ]
                        ]
                    ] [guistrut (-f (*f $arg4 $arg2) 1); arg9; [@[arg1]list] = $arg2]
                ] [guistrut (-f (*f $arg4 $arg2) 1); arg9; [@[arg1]list] = $arg2]
                [@[arg1]alts] = (- $[@[arg1]count] $[@[arg1]list])
                if (> $[@[arg1]alts] 0) [guistrut (*f $[@[arg1]alts] $arg4)]
                guistrut 0.25
            ]
            guislider [@[arg1]index] 0 (max (- $[@[arg1]disp] $[@[arg1]count]) 0) [] 1 1
        ]
        arg12
    ]
] ]


savewarncmd = ""
newgui savewarn [
    guifont "super" [ guicenter [ guitext "confirm action" ] ]
    guifont "default" [ guicenter [ guitext (format "^"^fs^fa%1^fS^"" $savewarncmd) ] ]
    guistrut 1
    guicenter [ guitext "the current map has unsaved changes" ]
    guicenter [ guitext "would you like to save them now?" ]
    guistrut 1
    guilist [
        guifont "emphasis" [
            guispring 1
            guibutton "^fgsave" [savemap; @@savewarncmd]
            guispring 1
            guibutton "^fodiscard" [@@savewarncmd]
            guispring 1
            guibutton "^frabort" [cleargui 1]
            guispring 1
        ]
    ]
]

savewarnchk = [
    if (&& (isconnected) (= (gamemode) $modeidxediting) $totalundos) [ savewarncmd = $arg1; showgui savewarn ] [ arg1 ]
]

guirgbsliders = [
    // arg1 is an alias that takes a hex colour value
    colr = (& (>> $$arg1 16) 0xFF)
    colg = (& (>> $$arg1 8) 0xFF)
    colb = (& $$arg1 0xFF)
    loop i 3 [
        n = [col@(at "r g b" $i)]
        guilist [
            guilist [
                guistrut 30 1
                guislider $n 0 255 [
                    @arg1 = (+ (<< $colr 0x10) (<< $colg 0x8) $colb)
                ] 0 1 (at [0xFF0000 0x00FF00 0x0000FF] $i) 1 (<< $$n (* (- 2 $i) 8))
            ]
            guitext (concatword "^f[" (at [0xFF0000 0x00FF00 0x0000FF] $i) "]" (at "R G B" $i))
        ]
    ]
]

guihexpreview = [
        guilist [
            guibackground $arg1 1 0xffffff 1
            guistrut 0.9
            guistrut 12 1
            guicenter [ guitext @arg2 ]
            guicenter [ guitext (hexcolour @arg1) ]
            guistrut 0.9
        ]
]

guipalette = [ // creates 6 * 30 colour preset buttons; arg1: icon size
    guistayopen [
        p = 0x0f0f0f // grays
        guilist [
            loop i 30 [
                guiimage "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                p = (+ $p 0x080808)
            ]
        ]
        p = 0xFFAAAA // pastell
        guilist [
            looplist j [0x001100 -0x110000 0x000011 -0x001100 0x110000 -0x000011] [
                loop i 5 [
                    guiimage "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0xFF5555 // tints
        guilist [
            looplist j [0x002200 -0x220000 0x000022 -0x002200 0x220000 -0x000022] [
                loop i 5 [
                    guiimage "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0xFF0000 // pure hues
        guilist [
            looplist j [0x003300 -0x330000 0x000033 -0x003300 0x330000 -0x000033] [
                loop i 5 [
                    guiimage "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0xAA0000 // shades
        guilist [
            looplist j [0x002200 -0x220000 0x000022 -0x002200 0x220000 -0x000022] [
                loop i 5 [
                    guiimage "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
        p = 0x550000 // dark shades
        guilist [
            looplist j [0x001100 -0x110000 0x000011 -0x001100 0x110000 -0x000011] [
                loop i 5 [
                    guiimage "textures/guiskin" [hex = @p] $arg1 0 "" [] $p
                    p = (+ $p $j)
                ]
            ]
        ]
    ]
]

newgui pickcolour [ guistayopen [
    // scurvar is a command / game variables that takes a hex colour value
    guilist [
        guifont emphasis [
            guitext (format "pick a colour for the variable /%1" $scurvar)
            guispring 1
            guibutton "^fyOK" [@scurvar @hex; cleargui 1]
            guistrut 3
            guibutton "^fgCancel" [cleargui 1]
        ]
    ]
    if (= $guipasses 0) [ hex = $$scurvar ]
    guistrut 1
    guilist [
        guibody [ guilist [
            guihexpreview (getvardef $scurvar) "default"
        ] ] [hex = (getvardef $scurvar)]
        guispring 1
        guibody [ guilist [
            guihexpreview $$scurvar "current"
        ] ] [hex = $$scurvar]
        guispring 1
        guihexpreview $hex "new"
        guispring 1
        guilist [
            guirgbsliders hex
        ]
    ]
    guistrut 1
    guicenter [guitext "^faclick a colour preset below and/or use the RGB-sliders to choose a new colour" ]
    guistrut 1
    guipalette 0.65
] ]

pickcolour = [ scurvar = $arg1 ; hex = $$arg1; showgui pickcolour ]

looplist i [
    guitest guitip guispacing guispacing2 guilist2 guiright guicenter guicenterz
    guibox guibox2 guimerge guilooplistsplit guiloopsplit guiloopscrollbar
    guicheckbox2 guieditbutton guieditbutton2 guieditcheckbox guieditcheckbox2
] [setcomplete $i 1]

